name: Deploy to staging

on:
  push:
    branches: [ git-actions-test ]

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: Compile CSS and Javascript
        run: |
          npm ci
          npm run dev

      - name: Create storage directories
        run: |
          mkdir -p storage/{app,framework,logs}
          mkdir -p storage/framework/{cache,session,views}
          chmod -R 777 storage

      - name: Composer install
        run: composer install --no-interaction

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    name: "Staging server: Prepare release"
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.STAGING_PATH }}/artifacts

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "${{ secrets.STAGING_PATH }}/releases/${GITHUB_SHA}"
            tar xzf ${{ secrets.STAGING_PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ secrets.STAGING_PATH }}/releases/${GITHUB_SHA}"
            rm -rf ${{ secrets.STAGING_PATH }}/releases/${GITHUB_SHA}/storage
            mkdir -p ${{ secrets.STAGING_PATH }}/storage/{app,public,framework,logs}
            mkdir -p ${{ secrets.STAGING_PATH }}/storage/framework/{cache,sessions,testing,views}
            chmod -R 0777 ${{ secrets.STAGING_PATH }}/storage



  run-before-hooks:
    name: "Staging server: Before hook"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers ]
    steps:
      - name: Run before hooks
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.STAGING_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.STAGING_PATH }}/current
          STORAGE_PATH: ${{ secrets.STAGING_PATH }}/storage
          BASE_PATH: ${{ secrets.STAGING_PATH }}
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
          script: |
            ${{ matrix.server.beforeHooks }}



  activate-release:
    name: "Staging server: Activate release"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers, run-before-hooks ]
    steps:
      - name: Activate release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.STAGING_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.STAGING_PATH }}/current
          PUBLIC_HTML_PATH: ${{ secrets.STAGING_PATH }}/public_html
          LARAVEL_PUBLIC_PATH: $ACTIVE_RELEASE_PATH/public
          STORAGE_PATH: ${{ secrets.STAGING_PATH }}/storage
          BASE_PATH: ${{ secrets.STAGING_PATH }}
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,PUBLIC_HTML_PATH,LARAVEL_PUBLIC_PATH,STORAGE_PATH,BASE_PATH,ENV_PATH,LARAVEL_ENV
          script: |
            printf "%s" "$LARAVEL_ENV" > "${BASE_PATH}/.env"
            ln -s -f ${BASE_PATH}/.env $RELEASE_PATH
            ln -s -f $STORAGE_PATH $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            cd /home/customer/www/staging.bank.grandadevans.com
            rm -rf public_html
            ln -s $ACTIVE_RELEASE_PATH ./public_html
            cd public_html
            ln -s index.php Default.php

  run-after-hooks:
    name: "Staging server: After hook"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers, run-before-hooks, activate-release ]
    steps:
      - name: Run after hooks
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.STAGING_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.STAGING_PATH }}/current
          PUBLIC_HTML_PATH: ${{ secrets.STAGING_PATH }}/public_html
          LARAVEL_PUBLIC_PATH: $ACTIVE_RELEASE_PATH/public
          STORAGE_PATH: ${{ secrets.STAGING_PATH }}/storage
          BASE_PATH: ${{ secrets.STAGING_PATH }}
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,PUBLIC_HTML_PATH,LARAVEL_PUBLIC_PATH,STORAGE_PATH,BASE_PATH,ENV_PATH,LARAVEL_ENV
          script: |
            cd $ACTIVE_RELEASE_PATH
            php81 artisan migrate

  clean-up:
    name: "Staging server: Clean up"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers, run-before-hooks, activate-release, run-after-hooks ]
    steps:
      - name: Run after hooks
        uses: appleboy/ssh-action@master
        env:
          RELEASES_PATH: ${{ secrets.STAGING_PATH }}/releases
          ARTIFACTS_PATH: ${{ secrets.STAGING_PATH }}/artifacts
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: RELEASES_PATH,ARTIFACTS_PATH
          script: |
            cd $RELEASES_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
            cd $ARTIFACTS_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
